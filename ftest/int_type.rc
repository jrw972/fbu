#!/usr/bin/env rcgo

package ftest;

func test (num uint; desc string; status bool) {
  if status {
    println (`ok `, num, ` - `, desc);
  } else {
    println (`not ok `, num, ` - `, desc);
  };
};

type Test component { };

init (this *Test) Main () {
  println (`1..51`);
  {
    test (1, `literal *`,  -10017 == 189 *  -53);
    test (2, `literal /`,      -3 == 189 /  -53);
    test (3, `literal %`,      30 == 189 %  -53);
    test (4, `literal <<`,    378 == 189 << 1);
    test (5, `literal >>`,     94 == 189 >> 1);
    test (6, `literal &`,     137 == 189 &  -53);
    test (7, `literal &^`,     52 == 189 &^ -53);

    test (8,  `literal +`,    136 == 189 +  -53);
    test (9,  `literal -`,    242 == 189 -  -53);
    test (10, `literal |`,     -1 == 189 |  -53);
    test (11, `literal ^`,   -138 == 189 ^  -53);

    test (12, `literal ==`, (189 == -53) == false);
    test (13, `literal !=`, (189 != -53) == true);
    test (14, `literal <`,  (189 <  -53) == false);
    test (15, `literal <=`, (189 <= -53) == false);
    test (16, `literal >`,  (189 >  -53) == true);
    test (17, `literal >=`, (189 >= -53) == true);
  };

  {
    const x int = 189;
    const y int = -53;

    test (18, `const *`,  -10017 == x *  y);
    test (19, `const /`,      -3 == x /  y);
    test (20, `const %`,      30 == x %  y);
    test (21, `const <<`,    378 == x << 1);
    test (22, `const >>`,     94 == x >> 1);
    test (23, `const &`,     137 == x &  y);
    test (24, `const &^`,     52 == x &^ y);

    test (25,  `const +`,    136 == x +  y);
    test (26,  `const -`,    242 == x -  y);
    test (27, `const |`,     -1 == x |  y);
    test (28, `const ^`,   -138 == x ^  y);

    test (29, `const ==`, (x == y) == false);
    test (30, `const !=`, (x != y) == true);
    test (31, `const <`,  (x <  y) == false);
    test (32, `const <=`, (x <= y) == false);
    test (33, `const >`,  (x >  y) == true);
    test (34, `const >=`, (x >= y) == true);
  };

  {
    var x int = 189;
    var y int = -53;

    test (35, `*`,  -10017 == x *  y);
    test (36, `/`,      -3 == x /  y);
    test (37, `%`,      30 == x %  y);
    test (38, `<<`,    378 == x << 1);
    test (39, `>>`,     94 == x >> 1);
    test (40, `&`,     137 == x &  y);
    test (41, `&^`,     52 == x &^ y);

    test (42,  `+`,    136 == x +  y);
    test (43,  `-`,    242 == x -  y);
    test (44, `|`,     -1 == x |  y);
    test (45, `^`,   -138 == x ^  y);

    test (46, `==`, (x == y) == false);
    test (47, `!=`, (x != y) == true);
    test (48, `<`,  (x <  y) == false);
    test (49, `<=`, (x <= y) == false);
    test (50, `>`,  (x >  y) == true);
    test (51, `>=`, (x >= y) == true);
  };
};

instance t Test Main ();
